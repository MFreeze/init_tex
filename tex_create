#!/bin/bash

function find_relative_path {
    ABSOLUTE_PATH=$1
    RELATIVE_PATH=""
    CUR_DIR=$(pwd)
    IDEM=1
    # Look for identical prefix for the given addresses
    while [[ $IDEM == "1" ]]; do
        #echo "ABSOLU : $ABSOLUTE_PATH"
        #echo "RELATIF: $CUR_DIR"
        #echo ""
        # Get the first part of the path (between first and second /)
        TMP_CDIR=$(echo "$CUR_DIR" | awk -F "/" '{print$1}')
        TMP_ADIR=$(echo "$ABSOLUTE_PATH" | awk -F "/" '{print$1}')
        if [[ "$TMP_CDIR" == "$TMP_ADIR" ]]; then
            # If prefix is identical then destroy it
            CUR_DIR=$(echo "$CUR_DIR" | awk -F "/" '{ORS="/"; for (i=2; i<=NF; i++) if($i != "") print $i}')
            ABSOLUTE_PATH=$(echo "$ABSOLUTE_PATH" | awk -F "/" '{ORS="/"; for (i=2; i<=NF; i++) if($i != "") print $i}')
        else
            # Else end loop
            IDEM=0
        fi
    done
    # For any different prefix in the current work directory, we need to up the root
    while [[ $CUR_DIR != "" ]]; do
        #echo "CUR_DIR = $CUR_DIR"
        CUR_DIR=$(echo "$CUR_DIR" | awk -F "/" '{ORS="/"; for (i=2; i<=NF; i++) if($i != "") print $i}')
        RELATIVE_PATH="../$RELATIVE_PATH"
    done
    # Then concatenate the rest of the desired path
    if [[ $RELATIVE_PATH != "" ]]; then
        RELATIVE_PATH="$RELATIVE_PATH/$ABSOLUTE_PATH"
    else
        RELATIVE_PATH="$ABSOLUTE_PATH"
    fi
    echo $RELATIVE_PATH
}

function print_help {
    echo  '
Tex create : Initialize a tex directory
Options :
    * b : Initialize a beamer project
    * n : Change name of main file
    * f : Include First page named "page_de_garde"
    * F : Change First Page
    * p : Change name of researched directory containing library.tex and scheduling.sty
'
}

MAIN_TEX="main"
GUARD_PAGE_TEX="page_garde"
FIRST_PAGE=""
PATTERN="00_resources"

BEAMER_MODE=0
BEGIN='\begin{document}'
BODY=''
END='\end{document}'

TEX_INTRO='\documentclass[a4paper,9pt]{article}
\newcommand{\incdir}{inc/}
\input{\incdir library}'

while getopts hbn:fF:p: flag; do
    case $flag in
        h) 
            print_help
            exit 1        
            ;;
        b) 
            TEX_INTRO='
\documentclass[a4paper,10pt]{beamer}

\newcommand{\incdir}{inc/}
\newcommand{\bpresentation}{i}

\input{\incdir library}

\usetheme[compress]{Dresden2}
\usecolortheme{beaver}
\usecolortheme{seahorse}

\setbeamertemplate{blocks}[rounded][shadow=true]

\title[<++>]{<++>}
\author[G. Duvillié]{Guillerme Duvillié}
\institute{Université Montpellier 2}

\AtBeginSection[]{
    \begin{frame}{Plan}
        \tableofcontents[currentsection]
    \end{frame}
}
'
            BODY='
\newcommand{\labelitemi}{$\bullet$}
\newcommand{\labelitemii}{$\star$}

\begin{frame}
    \titlepage
\end{frame}

\begin{frame}
    \frametitle{Plan}
    \tableofcontents
\end{frame}

\addtocounter{framenumber}{-2}
\addtobeamertemplate{footline}{\hspace{1.12\linewidth}\insertframenumber/\inserttotalframenumber}
'
            BEAMER_MODE=1
            ;;
        n)
            MAIN_TEX="$OPTARG"
            ;;
        f)
            if [[ $BEAMER_MODE == 0 ]]; then
                FIRST_PAGE='\input{\incdir '"$GUARD_PAGE_TEX"'}'
            fi
            ;;
        F)
            if [[ $BEAMER_MODE == 0 ]]; then
                GUARD_PAGE_TEX="$OPTARG"
                FIRST_PAGE='\input{\incdir '"$GUARD_PAGE_TEX"'}'
            fi
            ;;
        p)
            PATTERN="$OPTARG"
            ;;
        \?)
            print_help
            exit 1
            ;;
    esac
done

MAIN_TEX="${MAIN_TEX}.tex"
GUARD_PAGE_TEX="${GUARD_PAGE_TEX}.tex"

# Arborescence creation
for i in inc pict target; do
    if [[ ! -e "$i" ]]; then
        mkdir $i
    fi
done

# Create main.tex skeleton
echo "$TEX_INTRO" > $MAIN_TEX
echo "$FIRST_PAGE" >> $MAIN_TEX
echo "$BEGIN" >> $MAIN_TEX
echo "$BODY" >> $MAIN_TEX
echo "$END" >> $MAIN_TEX

DIR=$(locate "$PATTERN" | sed '2,$d')
PREFIX=$(find_relative_path "$DIR")

for i in build.sh release.sh scheduling.sty; do
    ln -sT "${PREFIX}/${i}" "$i"
done

# Symlink creation
cd inc
# TODO Let user the choice of desired directory
DIR=$(locate "$PATTERN" | sed '2,$d')
PREFIX=$(find_relative_path "$DIR")

for i in library.tex $GUARD_PAGE_TEX; do
    ln -sT "${PREFIX}/${i}" "$i"
done

exit 0
